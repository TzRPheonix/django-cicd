name: Django CI/CD

on:
  push:
    branches:
      - dev
      - prod

jobs:
  tests:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Installer Python et dépendances
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - run: pip install -r requirements.txt

      - name: Exécuter les tests avec Pytest
        run: pytest --disable-warnings

      - name: Vérifier la qualité du code avec Flake8
        run: flake8 --max-line-length=120 || true

      - name: Vérifier la sécurité avec Bandit
        run: bandit -r . || true

      - name: Générer la documentation avec Sphinx
        run: |
          sphinx-build -b html docs/source docs/build

      - name: Enregistrer les artefacts des tests et de la documentation
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-docs
          path: |
            test_results.txt
            flake8_report.txt
            bandit_report.txt
            docs/build/html/

  build:
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Installer Docker Compose
        run: |
          sudo apt update
          sudo apt install docker-compose

      - name: Construire et Tester avec Docker Compose
        run: |
          docker-compose build
          docker-compose up -d
          sleep 10
          docker-compose ps
          docker logs $(docker ps --format "{{.Names}}" | grep web)
          docker-compose down

  deploy:
    needs: build
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Login à Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin || exit 1

      - name: Construire et Pousser l’image Docker
        run: |
          docker build -t my-django-app .
          docker tag my-django-app ${{ secrets.DOCKER_USERNAME }}/my-django-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-django-app:latest
